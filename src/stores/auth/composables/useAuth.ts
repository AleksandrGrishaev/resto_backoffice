// src/stores/auth/composables/useAuth.ts - –ò–°–ü–†–ê–í–õ–ï–ù–û
import { computed } from 'vue'
import { useRouter } from 'vue-router'
import { useAuthStore } from '../index'
import type { UseAuthReturn } from '../types'

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π composable –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 */
export function useAuth(): UseAuthReturn {
  const authStore = useAuthStore()
  const router = useRouter()

  // ===== –ì–ï–¢–¢–ï–†–´ =====

  const currentUser = computed(() => authStore.currentUser)
  const isAuthenticated = computed(() => authStore.isAuthenticated)
  const isLoading = computed(() => authStore.isLoading)
  const userRoles = computed(() => authStore.userRoles)

  // –†–æ–ª–∏
  const isAdmin = computed(() => authStore.isAdmin)
  const isManager = computed(() => authStore.isManager)
  const isCashier = computed(() => authStore.isCashier)

  // –ü—Ä–∞–≤–∞
  const canEdit = computed(() => authStore.canEdit)
  const canViewFinances = computed(() => authStore.canViewFinances)

  // ===== –ú–ï–¢–û–î–´ =====

  /**
   * üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –æ—Ç–≤–µ—Ç–∞
   */
  async function login(pin: string) {
    try {
      // –í—ã–∑—ã–≤–∞–µ–º authStore.login() –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
      const success = await authStore.login(pin)

      if (success) {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞
        const user = authStore.currentUser
        const redirectTo = authStore.getDefaultRoute()

        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—é
        await router.push(redirectTo)

        return {
          success: true,
          user,
          redirectTo
        }
      } else {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
        return {
          success: false,
          error: authStore.state.error || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'
        }
      }
    } catch (error) {
      return {
        success: false,
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      }
    }
  }

  /**
   * –í—ã—Ö–æ–¥ —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
   */
  async function logout() {
    await authStore.logout()
    await router.push('/auth/login')
  }

  return {
    // State
    currentUser,
    isAuthenticated,
    isLoading,
    userRoles,

    // Actions
    login,
    logout,

    // Permissions
    canEdit,
    canViewFinances,
    isAdmin,
    isManager,
    isCashier
  }
}
