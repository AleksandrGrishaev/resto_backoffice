rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function hasRole(role) {
      return role in getUserData().roles;
    }

    function isAdmin() {
      return hasRole('admin');
    }

    // Users collection
    match /users/{userId} {
      // Only admins can create/update users
      allow create, update: if isAuthenticated() && isAdmin();
      // Users can read their own data, admins can read all
      allow read: if isAuthenticated() &&
        (request.auth.uid == userId || isAdmin());
    }

    // Login attempts
    match /login_attempts/{attemptId} {
      allow create: if true; // Allow logging attempts
      allow read: if isAuthenticated() && isAdmin();
      allow update, delete: if false;
    }

    // Kitchen orders
    match /orders/{orderId} {
      allow read: if isAuthenticated() &&
        (hasRole('kitchen') || hasRole('bar') || hasRole('admin'));
      allow write: if isAuthenticated() &&
        (hasRole('cashier') || hasRole('admin'));
    }

    // Settings
    match /settings/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
  }
}
